csharp
using UnityEngine;

public class HealthSystem : MonoBehaviour
{
    public int maxHealth = 100;
    private int currentHealth;

    void Start()
    {
        currentHealth = maxHealth;
    }

    public void TakeDamage(int damage)
    {
        currentHealth -= damage;
        if (currentHealth <= 0)
        {
            Die();
        }
    }

    public void Heal(int amount)
    {
        currentHealth += amount;
        if (currentHealth > maxHealth)
        {
            currentHealth = maxHealth;
        }
    }

    void Die()
    {
        Debug.Log(gameObject.name + " died.");
        // Add death logic here
        // Destroy(gameObject); // Uncomment to destroy the object upon death
    }
}
Explanation:
Health Management: This script initializes the currentHealth to maxHealth and provides methods to take damage and heal.

TakeDamage Method: Reduces health by the damage amount and calls the Die() method if health drops to zero or below.

Heal Method: Increases health by the specified amount, ensuring it does not exceed maxHealth.

Die Method: Handles death logic (e.g., destroying the game object or triggering a death animation).

How to Implement:
Create the Script:

In Unity, go to the Assets/Scripts/ folder (or create it if it doesn't exist).

Right-click in the Project window and select Create > C# Script.

Name the script HealthSystem.cs.

Edit the Script:

Double-click the HealthSystem.cs script to open it in your code editor.

Replace the default content with the provided script above.

Attach the Script to Game Objects:

Attach the HealthSystem script to player and enemy GameObjects that require health management.

Test the Health System:

Create methods in other scripts to call TakeDamage and Heal as needed.

Test in-game to ensure the health system works correctly.

Example - Taking Damage:
csharp
using UnityEngine;

public class PlayerCombat : MonoBehaviour
{
    public HealthSystem healthSystem;

    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            healthSystem.TakeDamage(10);
        }
    }
}
